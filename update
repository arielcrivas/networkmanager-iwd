#!/bin/zsh

source "$LIBDIR"/io.zsh
zmodload zsh/datetime

pkgname='networkmanager-iwd'

msg 'Getting version information...'

version=$(pkg-query -c -f '%v' $pkgname)

buffer=$(git ls-remote 'https://gitlab.freedesktop.org/NetworkManager/NetworkManager.git' 'refs/tags/*')
pkgver=$(sed -r -e 's|^.*refs/tags/||' \
  -e '/^[0-9]+\.[0-9]+\.[0-9]+\^/!d' \
  -e 's|\^.*||g' <<< "$buffer" | sort --version-sort | tail -1)

if [[ $pkgver ]] && [[ $version == $pkgver ]]; then
  msg 'Package `%s` is already updated!' $pkgname
  exit 0
fi

commit=$(awk '($2 ~ /'${pkgver}'\^\{\}$/) {print $1}' <<< "$buffer")

#printf 'version: %s\ncommit : %s\n' $pkgver $commit >&2
#exit 0

setconf PKGBUILD pkgver $pkgver
(( $(sed -e '/^pkgrel/!d' -e 's/^pkgrel=//' PKGBUILD) > 1 )) && \
  setconf PKGBUILD pkgrel 1
setconf PKGBUILD _commit=${commit}"   # tags/${pkgver}^{}"

mkpkg --verifysource -f
mkpkg --srcinfo
mkpkg -sicfr --noconfirm || exit $status

if [[ $(git rev-parse --is-inside-work-tree 2>/dev/null) == true ]]; then
  branch=$(git rev-parse --abbrev-ref HEAD)
  git add PKGBUILD .SRCINFO
  mtime=$EPOCHSECONDS
  (( mtime % 2 )) && (( mtime-- ))
  git commit --date=$(strftime %Y-%m-%dT%H:%M:%S $mtime) -m 'Build version '${pkgver}
  git push -u origin $branch
  git tag --annotate -m ${pkgver} v${pkgver}
  git push --tags -q -u origin $branch
else
  :
fi

exit $status

# vim: ft=zsh ts=2 sts=2 sw=2 et:
